// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  email       String?       @unique
  password    String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  sessions    Session[]
  tags        Tag[]
  BankAccount BankAccount[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model BankAccount {
  id           String        @id @default(cuid())
  userId       String        @map("user_id")
  name         String
  balance      Float
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]

  @@map("bank_account")
}

model Transaction {
  id            String      @id @default(cuid())
  userId        String      @map("user_id")
  bankAccountId String      @map("bank_account_id")
  amount        Float
  description   String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  bankAccount   BankAccount @relation(fields: [bankAccountId], references: [id])  // Explicit relation
  tags          Tag[]       

  @@map("transaction")
}

model Tag {
  id           String       @id @default(cuid())
  name         String
  userId       String       @map("user_id")
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  transactions Transaction[] 

  @@map("tag")
}
